version: "3.7"

services:
  backend:
    image: "backend-local"
    build: .
    container_name: backend
    stdin_open: true
    tty: true
    env_file:
      - .env

  celery:
    image: "backend-local"
    command: celery -A settings worker -l info --pidfile=/tmp/celery.pid
    build: .
    container_name: celery
    stdin_open: true
    tty: true
    env_file:
      - .env

  celerybeat:
    image: "backend-local"
    command: celery -A settings beat -l info --schedule=/tmp/celerybeat-schedule --pidfile=/tmp/celerybeat.pid
    build: .
    container_name: celerybeat
    stdin_open: true
    tty: true
    env_file:
      - .env

  memcached:
    image: memcached
    container_name: memcached

  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
    env_file:
      - .env

  flower:
    image: mher/flower
    container_name: flower
#    command: celery --broker=amqp://guest:guest@rabbitmq:5672// flower
    command: celery --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_DEFAULT_HOST}:${RABBITMQ_DEFAULT_PORT}// flower
    depends_on:
      - rabbitmq

  nginx:
    image: nginx:1.19
    container_name: "nginx"
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "8080:8080"  # windows specific!!!
      #- "80:80"
      #- "443:443"

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./portainer:/data"
    restart: always # unless-stopped
